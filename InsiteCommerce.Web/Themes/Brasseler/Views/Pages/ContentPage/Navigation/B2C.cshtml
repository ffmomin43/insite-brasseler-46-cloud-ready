@using Insite.WebFramework.Content
@using Insite.ContentLibrary.Pages
@model Insite.WebFramework.Content.AbstractPage

@helper Nav(AbstractPage navigationItem, int level)
{
    var subItems = Content.GetChildPagesForVariantKey<ContentPage>(navigationItem.VariantKey.Value).Where(o => !o.ExcludeFromNavigation).OrderBy(x => x.SortOrder).ToList();
    var hasSubItems = subItems.Any();
    if (!hasSubItems)
    {
            <li class="sub-item @(level == 0 ? "top-level-item" : "")">
                <a href="@GenerateUrl(navigationItem)" ng-click="vm.hideB2CNav($event)">
                    <span class="sub-item-text">@navigationItem.Title</span>
                </a>
            </li>
    }
    else
    {
            <li class="sub-item @(level == 0 ? "top-level-item" : "")">
                <a href="@GenerateUrl(navigationItem)" class="nav-item-container" ng-click="vm.hideB2CNav($event)">
                    <span class="sub-item-text">@navigationItem.Title</span>
                    <label id="tst_mainMenu_nav_@navigationItem.ContentKey" for="nav-@navigationItem.ContentKey" class="toggle-sub" onclick="insite.nav.goToSubnav(this)"></label>
                </a>
                <input type="checkbox" name="nav" id="nav-@navigationItem.ContentKey" class="subnav-check" />
                <ul id="sub-@navigationItem.ContentKey" class="subnav sub-tier-panel">
                    <li class="sub-heading">@navigationItem.Title</li>
                    @foreach (var subItem in subItems)
                    {
                        @Nav(subItem, ++level)
                    }
                </ul>
            </li>
    }
}
@Nav(Model, 0)